import { Observable } from 'rxjs';
import { finalize, shareReplay } from 'rxjs/operators';
import { NAVIGATOR } from '@ng-web-apis/common';
import { inject, InjectionToken, Inject, Injectable, defineInjectable } from '@angular/core';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
import * as ɵngcc0 from '@angular/core';
const GEOLOCATION = new InjectionToken('An abstraction over window.navigator.geolocation object', {
    factory: () => inject(NAVIGATOR).geolocation,
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const POSITION_OPTIONS = new InjectionToken('Token for an additional position options', { factory: () => ({}) });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
const GEOLOCATION_SUPPORT = new InjectionToken('Is Geolocation API supported?', {
    factory: () => {
        return !!inject(GEOLOCATION);
    },
});

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
// TODO: Replace type with GeolocationPosition after bumping TS to 4.1.3+
// @dynamic
class GeolocationService extends Observable {
    /**
     * @param {?} geolocationRef
     * @param {?} geolocationSupported
     * @param {?} positionOptions
     */
    constructor(geolocationRef, geolocationSupported, positionOptions) {
        /** @type {?} */
        let watchPositionId = 0;
        super(subscriber => {
            if (!geolocationSupported) {
                subscriber.error('Geolocation is not supported in your browser');
            }
            watchPositionId = geolocationRef.watchPosition(position => subscriber.next(position), positionError => subscriber.error(positionError), positionOptions);
        });
        return (/** @type {?} */ (this.pipe(finalize(() => geolocationRef.clearWatch(watchPositionId)), shareReplay({ bufferSize: 1, refCount: true }))));
    }
}
GeolocationService.ɵfac = function GeolocationService_Factory(t) { return new (t || GeolocationService)(ɵngcc0.ɵɵinject(GEOLOCATION), ɵngcc0.ɵɵinject(GEOLOCATION_SUPPORT), ɵngcc0.ɵɵinject(POSITION_OPTIONS)); };
GeolocationService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: GeolocationService, factory: GeolocationService.ɵfac, providedIn: 'root' });
/** @nocollapse */
GeolocationService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [GEOLOCATION,] }] },
    { type: Boolean, decorators: [{ type: Inject, args: [GEOLOCATION_SUPPORT,] }] },
    { type: undefined, decorators: [{ type: Inject, args: [POSITION_OPTIONS,] }] }
];
/** @nocollapse */ GeolocationService.ngInjectableDef = defineInjectable({ factory: function GeolocationService_Factory() { return new GeolocationService(inject(GEOLOCATION), inject(GEOLOCATION_SUPPORT), inject(POSITION_OPTIONS)); }, token: GeolocationService, providedIn: "root" });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(GeolocationService, [{
        type: Injectable,
        args: [{
                providedIn: 'root'
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [GEOLOCATION]
            }] }, { type: Boolean, decorators: [{
                type: Inject,
                args: [GEOLOCATION_SUPPORT]
            }] }, { type: undefined, decorators: [{
                type: Inject,
                args: [POSITION_OPTIONS]
            }] }]; }, null); })();

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { GeolocationService, GEOLOCATION, POSITION_OPTIONS, GEOLOCATION_SUPPORT };

//# sourceMappingURL=ng-web-apis-geolocation.js.map