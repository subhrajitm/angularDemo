(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('rxjs'), require('rxjs/operators'), require('@ng-web-apis/common'), require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('@ng-web-apis/geolocation', ['exports', 'rxjs', 'rxjs/operators', '@ng-web-apis/common', '@angular/core'], factory) :
    (factory((global['ng-web-apis'] = global['ng-web-apis'] || {}, global['ng-web-apis'].geolocation = {}),global.rxjs,global.rxjs.operators,global.common,global.ng.core));
}(this, (function (exports,rxjs,operators,common,i0) { 'use strict';

    /*! *****************************************************************************
    Copyright (c) Microsoft Corporation. All rights reserved.
    Licensed under the Apache License, Version 2.0 (the "License"); you may not use
    this file except in compliance with the License. You may obtain a copy of the
    License at http://www.apache.org/licenses/LICENSE-2.0

    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
    MERCHANTABLITY OR NON-INFRINGEMENT.

    See the Apache Version 2.0 License for specific language governing permissions
    and limitations under the License.
    ***************************************************************************** */
    /* global Reflect, Promise */
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b)
                if (b.hasOwnProperty(p))
                    d[p] = b[p]; };
        return extendStatics(d, b);
    };
    function __extends(d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    }

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var GEOLOCATION = new i0.InjectionToken('An abstraction over window.navigator.geolocation object', {
        factory: function () { return i0.inject(common.NAVIGATOR).geolocation; },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var POSITION_OPTIONS = new i0.InjectionToken('Token for an additional position options', { factory: function () { return ({}); } });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    /** @type {?} */
    var GEOLOCATION_SUPPORT = new i0.InjectionToken('Is Geolocation API supported?', {
        factory: function () {
            return !!i0.inject(GEOLOCATION);
        },
    });

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    // TODO: Replace type with GeolocationPosition after bumping TS to 4.1.3+
    // @dynamic
    var GeolocationService = /** @class */ (function (_super) {
        __extends(GeolocationService, _super);
        function GeolocationService(geolocationRef, geolocationSupported, positionOptions) {
            var _this = this;
            /** @type {?} */
            var watchPositionId = 0;
            _this = _super.call(this, function (subscriber) {
                if (!geolocationSupported) {
                    subscriber.error('Geolocation is not supported in your browser');
                }
                watchPositionId = geolocationRef.watchPosition(function (position) { return subscriber.next(position); }, function (positionError) { return subscriber.error(positionError); }, positionOptions);
            }) || this;
            return ( /** @type {?} */(_this.pipe(operators.finalize(function () { return geolocationRef.clearWatch(watchPositionId); }), operators.shareReplay({ bufferSize: 1, refCount: true }))));
        }
        GeolocationService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root',
                    },] }
        ];
        /** @nocollapse */
        GeolocationService.ctorParameters = function () {
            return [
                { type: undefined, decorators: [{ type: i0.Inject, args: [GEOLOCATION,] }] },
                { type: Boolean, decorators: [{ type: i0.Inject, args: [GEOLOCATION_SUPPORT,] }] },
                { type: undefined, decorators: [{ type: i0.Inject, args: [POSITION_OPTIONS,] }] }
            ];
        };
        /** @nocollapse */ GeolocationService.ngInjectableDef = i0.defineInjectable({ factory: function GeolocationService_Factory() { return new GeolocationService(i0.inject(GEOLOCATION), i0.inject(GEOLOCATION_SUPPORT), i0.inject(POSITION_OPTIONS)); }, token: GeolocationService, providedIn: "root" });
        return GeolocationService;
    }(rxjs.Observable));

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.GeolocationService = GeolocationService;
    exports.GEOLOCATION = GEOLOCATION;
    exports.POSITION_OPTIONS = POSITION_OPTIONS;
    exports.GEOLOCATION_SUPPORT = GEOLOCATION_SUPPORT;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=ng-web-apis-geolocation.umd.js.map